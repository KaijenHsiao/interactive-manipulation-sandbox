Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> function_call
Rule 2     expression -> paren_group
Rule 3     expression -> conjunction
Rule 4     expression -> disjunction
Rule 5     paren_group -> LPAREN expression RPAREN
Rule 6     conjunction -> expression AND function_call
Rule 7     disjunction -> expression OR function_call
Rule 8     function_call -> SYMBOL LPAREN query_function_call_args RPAREN
Rule 9     query_function_call_args -> <empty>
Rule 10    query_function_call_args -> SYMBOL
Rule 11    query_function_call_args -> SYMBOL COMMA query_function_call_args

Terminals, with rules where they appear

AND                  : 6
COMMA                : 11
LPAREN               : 5 8
OR                   : 7
RPAREN               : 5 8
SYMBOL               : 8 10 11
error                : 

Nonterminals, with rules where they appear

conjunction          : 3
disjunction          : 4
expression           : 5 6 7 0
function_call        : 1 6 7
paren_group          : 2
query_function_call_args : 8 11

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . function_call
    (2) expression -> . paren_group
    (3) expression -> . conjunction
    (4) expression -> . disjunction
    (8) function_call -> . SYMBOL LPAREN query_function_call_args RPAREN
    (5) paren_group -> . LPAREN expression RPAREN
    (6) conjunction -> . expression AND function_call
    (7) disjunction -> . expression OR function_call

    SYMBOL          shift and go to state 2
    LPAREN          shift and go to state 5

    conjunction                    shift and go to state 1
    function_call                  shift and go to state 3
    paren_group                    shift and go to state 4
    disjunction                    shift and go to state 6
    expression                     shift and go to state 7

state 1

    (3) expression -> conjunction .

    RPAREN          reduce using rule 3 (expression -> conjunction .)
    AND             reduce using rule 3 (expression -> conjunction .)
    OR              reduce using rule 3 (expression -> conjunction .)
    $end            reduce using rule 3 (expression -> conjunction .)


state 2

    (8) function_call -> SYMBOL . LPAREN query_function_call_args RPAREN

    LPAREN          shift and go to state 8


state 3

    (1) expression -> function_call .

    RPAREN          reduce using rule 1 (expression -> function_call .)
    AND             reduce using rule 1 (expression -> function_call .)
    OR              reduce using rule 1 (expression -> function_call .)
    $end            reduce using rule 1 (expression -> function_call .)


state 4

    (2) expression -> paren_group .

    RPAREN          reduce using rule 2 (expression -> paren_group .)
    AND             reduce using rule 2 (expression -> paren_group .)
    OR              reduce using rule 2 (expression -> paren_group .)
    $end            reduce using rule 2 (expression -> paren_group .)


state 5

    (5) paren_group -> LPAREN . expression RPAREN
    (1) expression -> . function_call
    (2) expression -> . paren_group
    (3) expression -> . conjunction
    (4) expression -> . disjunction
    (8) function_call -> . SYMBOL LPAREN query_function_call_args RPAREN
    (5) paren_group -> . LPAREN expression RPAREN
    (6) conjunction -> . expression AND function_call
    (7) disjunction -> . expression OR function_call

    SYMBOL          shift and go to state 2
    LPAREN          shift and go to state 5

    conjunction                    shift and go to state 1
    function_call                  shift and go to state 3
    paren_group                    shift and go to state 4
    disjunction                    shift and go to state 6
    expression                     shift and go to state 9

state 6

    (4) expression -> disjunction .

    RPAREN          reduce using rule 4 (expression -> disjunction .)
    AND             reduce using rule 4 (expression -> disjunction .)
    OR              reduce using rule 4 (expression -> disjunction .)
    $end            reduce using rule 4 (expression -> disjunction .)


state 7

    (0) S' -> expression .
    (6) conjunction -> expression . AND function_call
    (7) disjunction -> expression . OR function_call

    AND             shift and go to state 10
    OR              shift and go to state 11


state 8

    (8) function_call -> SYMBOL LPAREN . query_function_call_args RPAREN
    (9) query_function_call_args -> .
    (10) query_function_call_args -> . SYMBOL
    (11) query_function_call_args -> . SYMBOL COMMA query_function_call_args

    RPAREN          reduce using rule 9 (query_function_call_args -> .)
    SYMBOL          shift and go to state 12

    query_function_call_args       shift and go to state 13

state 9

    (5) paren_group -> LPAREN expression . RPAREN
    (6) conjunction -> expression . AND function_call
    (7) disjunction -> expression . OR function_call

    RPAREN          shift and go to state 14
    AND             shift and go to state 10
    OR              shift and go to state 11


state 10

    (6) conjunction -> expression AND . function_call
    (8) function_call -> . SYMBOL LPAREN query_function_call_args RPAREN

    SYMBOL          shift and go to state 2

    function_call                  shift and go to state 15

state 11

    (7) disjunction -> expression OR . function_call
    (8) function_call -> . SYMBOL LPAREN query_function_call_args RPAREN

    SYMBOL          shift and go to state 2

    function_call                  shift and go to state 16

state 12

    (10) query_function_call_args -> SYMBOL .
    (11) query_function_call_args -> SYMBOL . COMMA query_function_call_args

    RPAREN          reduce using rule 10 (query_function_call_args -> SYMBOL .)
    COMMA           shift and go to state 17


state 13

    (8) function_call -> SYMBOL LPAREN query_function_call_args . RPAREN

    RPAREN          shift and go to state 18


state 14

    (5) paren_group -> LPAREN expression RPAREN .

    AND             reduce using rule 5 (paren_group -> LPAREN expression RPAREN .)
    OR              reduce using rule 5 (paren_group -> LPAREN expression RPAREN .)
    $end            reduce using rule 5 (paren_group -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 5 (paren_group -> LPAREN expression RPAREN .)


state 15

    (6) conjunction -> expression AND function_call .

    AND             reduce using rule 6 (conjunction -> expression AND function_call .)
    OR              reduce using rule 6 (conjunction -> expression AND function_call .)
    $end            reduce using rule 6 (conjunction -> expression AND function_call .)
    RPAREN          reduce using rule 6 (conjunction -> expression AND function_call .)


state 16

    (7) disjunction -> expression OR function_call .

    AND             reduce using rule 7 (disjunction -> expression OR function_call .)
    OR              reduce using rule 7 (disjunction -> expression OR function_call .)
    $end            reduce using rule 7 (disjunction -> expression OR function_call .)
    RPAREN          reduce using rule 7 (disjunction -> expression OR function_call .)


state 17

    (11) query_function_call_args -> SYMBOL COMMA . query_function_call_args
    (9) query_function_call_args -> .
    (10) query_function_call_args -> . SYMBOL
    (11) query_function_call_args -> . SYMBOL COMMA query_function_call_args

    RPAREN          reduce using rule 9 (query_function_call_args -> .)
    SYMBOL          shift and go to state 12

    query_function_call_args       shift and go to state 19

state 18

    (8) function_call -> SYMBOL LPAREN query_function_call_args RPAREN .

    AND             reduce using rule 8 (function_call -> SYMBOL LPAREN query_function_call_args RPAREN .)
    OR              reduce using rule 8 (function_call -> SYMBOL LPAREN query_function_call_args RPAREN .)
    $end            reduce using rule 8 (function_call -> SYMBOL LPAREN query_function_call_args RPAREN .)
    RPAREN          reduce using rule 8 (function_call -> SYMBOL LPAREN query_function_call_args RPAREN .)


state 19

    (11) query_function_call_args -> SYMBOL COMMA query_function_call_args .

    RPAREN          reduce using rule 11 (query_function_call_args -> SYMBOL COMMA query_function_call_args .)

